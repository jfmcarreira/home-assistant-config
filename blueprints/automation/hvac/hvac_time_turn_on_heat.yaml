blueprint:
  name: "[HVAC] Controlo Horário - Ligar Ar Condicionado (Quente)"
  description: Ligar Modo Aquecimento do Ar condicionado a uma determinada hora

  domain: automation
  input:
    hvac_unit:
      name: Unidade a Controlar
      selector:
        entity:
          domain: climate
          multiple: true

    schedule_start:
      name: Horário de ínicio de controlo
      description: Horário da acção
      selector:
        time:

    schedule_end:
      name: Horário de fim de controlo
      description: Horário da acção
      selector:
        time:

    weekday:
      name: Dia da Semana
      default: [mon, tue, wed, thu, fri, sat, sun]
      selector:
        select:
          options:
            - label: Segunda-feira
              value: mon
            - label: Terça-feira
              value: tue
            - label: Quarta-feira
              value: wed
            - label: Quinta-feira
              value: thu
            - label: Sexta-feira
              value: fri
            - label: Sábado
              value: sat
            - label: Domingo
              value: sun
          custom_value: false
          multiple: true

    hvac_temperature:
      name: Temperatura do AC
      default: 20
      selector:
        number:
          min: 18
          max: 25

    extra_hvac_actions:
      name: Acções Extra
      default: []
      selector:
        action:

    hvac_delayed_temperature_offset:
      name: Temperatura do AC Após 1h
      default: 0
      selector:
        number:
          mode: box
          min: -2
          max: +2

    temperature_sensor:
      name: Sensor de Temperatura
      default:
      selector:
        entity:
          domain: sensor
          device_class: temperature

    window_sensor:
      name: Sensor da Janelas
      default: []
      selector:
        entity:
          domain: binary_sensor
          device_class: window

    room_temperature:
      name: Temperatura da Divisão
      default: 20
      selector:
        number:
          min: 18
          max: 25
          step: 0.1
          unit_of_measurement: "ºC"

    selected_season:
      name: Estação do Ano
      default: [spring, summer, autumn, winter]
      selector:
        select:
          options:
            - label: Primavera
              value: spring
            - label: Verão
              value: summer
            - label: Outono
              value: autumn
            - label: Inverno
              value: winter
          custom_value: false
          multiple: true

mode: restart
max_exceeded: silent

variables:
  hvac_temperature: !input hvac_temperature
  hvac_delayed_temperature_offset: !input hvac_delayed_temperature_offset

trigger:
  - trigger: time
    id: normal_time
    at: !input schedule_start

  - trigger: numeric_state
    entity_id: !input temperature_sensor
    below: !input room_temperature
    for:
      minutes: 10

  - trigger: numeric_state
    entity_id: sensor.temperature_outside
    below: !input room_temperature
    for:
      minutes: 10

condition:
  - condition: state
    entity_id: input_boolean.automation_bypass_hvac
    state: "off"

  - condition: state
    entity_id: !input hvac_unit
    state:
      - "off"

  - condition: state
    entity_id: sensor.season
    state: !input "selected_season"

  - condition: time
    after: !input schedule_start
    before: !input schedule_end

  - condition: time
    weekday: !input "weekday"

  - condition: numeric_state
    entity_id: !input temperature_sensor
    below: !input room_temperature

  - condition: numeric_state
    entity_id: sensor.temperature_outside
    below: !input room_temperature

  - alias: "Window Closed"
    condition: state
    entity_id: !input window_sensor
    state: "off"

  - alias: "All Windows Closed"
    condition: state
    entity_id: binary_sensor.window_all_house
    state:
      - "off"

  - alias: "Run once a day (wait at least 12 hours)"
    condition: template
    value_template: >
      {{ now().timestamp() - this.attributes.last_triggered | as_timestamp > 60 * 60 * 12 }}

action:
  - action: switch.turn_on
    data: {}
    target:
      entity_id:
        - switch.hall_ac_echo
        - switch.office_ac_echo
        - switch.bedroom_henrique_ac_echo
        - switch.master_bedroom_ac_echo
        - switch.bedroom_ricardo_ac_echo

  - action: climate.set_hvac_mode
    target:
      entity_id: !input hvac_unit
    data:
      hvac_mode: heat

  - action: climate.set_temperature
    target:
      entity_id: !input hvac_unit
    data:
      temperature: !input hvac_temperature

  - action: climate.set_fan_mode
    data:
      fan_mode: auto
    target:
      entity_id: !input hvac_unit

  - action: climate.set_swing_mode
    data:
      swing_mode: swing
    target:
      entity_id: !input hvac_unit

  - sequence: !input extra_hvac_actions

  - condition: template
    value_template: "{{ (hvac_delayed_temperature_offset | int | abs) > 0  }}"

  - delay:
      hours: 1

  - action: climate.set_temperature
    target:
      entity_id: !input hvac_unit
    data:
      temperature: "{{ hvac_temperature + hvac_delayed_temperature_offset }}"
