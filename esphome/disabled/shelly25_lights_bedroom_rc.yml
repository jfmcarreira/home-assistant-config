substitutions:
  DeviceName: shelly25_lights_bedroom_rc
  PowerSaveMode: HIGH
  FriendlyName: Shelly25 Bedroom RC
  InputPin: GPIO5
  Light_A_Name: Bedroom RC Main
  Light_B_Name: Bedroom RC Extra
  Address: "0.0.0.0"

packages:
  esphome_base: !include packages/common.yml
  device_base: !include packages/shelly25.yml
  home_state: !include packages/home_state.yml
  #use_address: !include packages/use_address.yml


lights_base: !include packages/shelly25_base_two_lights.yml

globals:
  - id: lights_state
    type: int
    restore_value: no
    initial_value: '0'


script:
  - id: smart_light_state
    then:
      - globals.set:
          id: lights_state
          value: !lambda "return id(lights_state)+=1;"
      - if:
          condition:
            lambda: 'return id(lights_state) > 1;'
          then:
             - globals.set:
                id: lights_state
                value: "0"

      - if:
          condition:
            lambda: 'return id(lights_state) == 0;'
          then:
            - light.turn_on: light_1
            - light.turn_on: light_2
      - if:
          condition:
            lambda: 'return id(lights_state) == 1;'
          then:
            - light.turn_on: light_1
            - light.turn_off: light_2


binary_sensor:
  - id: sw_1
    platform: gpio
    pin: ${InputPin}
    on_multi_click:
      - timing:
          - ON for at most 1000ms
          - OFF for at least 100ms
        then:
          - if:
              condition:
                or:
                  - light.is_on: light_1
                  - light.is_on: light_2
              then:
                - light.turn_off: light_1
                - light.turn_off: light_2
              else:
                - if:
                    condition:
                      and:
                        - api.connected:
                        - binary_sensor.is_on: house_mode_night
                    then:
                      - light.turn_on: light_1
                      - globals.set:
                          id: lights_state
                          value: "1"
                    else:
                      - light.turn_on: light_1
                      - light.turn_on: light_2
                      - globals.set:
                          id: lights_state
                          value: "0"
      - timing:
          - ON for at least 1000ms
        then:
          - if:
              condition:
                - api.connected:
              then:
                - script.execute: smart_light_state