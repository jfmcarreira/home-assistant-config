substitutions:
  devicename: nodemcu_gate
  FriendlyName: Gate

esphome:
  name: ${devicename}

esp8266:
  board: nodemcuv2
  early_pin_init: false

packages:
  esphome_base: !include packages/common.yml
  esphome_web: !include packages/webserver.yml

external_components:
  - source:
      type: git
      url: https://github.com/muxa/esphome-state-machine.git
    components: [state_machine]

output:
  - platform: gpio
    id: relay_1
    pin:
      number: D1

  - platform: gpio
    id: relay_2
    pin:
      number: D2

sensor:
  - platform: homeassistant
    id: main_power
    entity_id: sensor.device_power_gate

binary_sensor:
  - platform: gpio
    id: gate_close_sensor
    name: gate_close
    pin:
      inverted: true
      number: D5
      mode: INPUT_PULLUP
    filters:
      - delayed_on: 750ms

  - platform: gpio
    id: gate_open_sensor
    name: gate_open
    pin:
      number: D6
      inverted: true
      mode: INPUT_PULLUP
    filters:
      - delayed_on: 750ms

button:
  - platform: output
    id: gate_open_single_internal
    output: relay_2
    duration: 750ms

  - platform: output
    id: gate_open
    name: gate_open
    output: relay_1
    duration: 750ms

  - platform: template
    name: gate_open_single
    on_press:
      then:
        - if:
            condition:
              and:
                - binary_sensor.is_off: gate_open_sensor
            then:
              - button.press: gate_open_single_internal

cover:
  - platform: feedback
    name: "Gate"
    device_class: gate
    has_built_in_endstop: true
    assumed_state: false
    open_action:
      - if:
          condition:
            and:
              - binary_sensor.is_off: gate_open_sensor
          then:
            - button.press: gate_open
    close_action:
      - if:
          condition:
            and:
              - binary_sensor.is_off: gate_close_sensor
          then:
            - button.press: gate_open
    stop_action:
      - if:
          condition:
            and:
              - binary_sensor.is_off: gate_open_sensor
              - binary_sensor.is_off: gate_close_sensor
          then:
            - button.press: gate_open

    open_endstop: gate_open_sensor
    close_endstop: gate_close_sensor
    open_duration: 17s
    close_duration: 20s
    max_duration: 40s
    direction_change_wait_time: 5s
