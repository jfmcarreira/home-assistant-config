light:
  - id: light_1
    name: ${Light_1_Name}
    platform: binary
    output: relay_1
    restore_mode: RESTORE_DEFAULT_OFF

  - id: light_2
    name: ${Light_2_Name}
    platform: binary
    output: relay_2
    restore_mode: RESTORE_DEFAULT_OFF

sensor:
  - platform: ade7953_i2c
    update_interval: 5s
    # Prevent overheating by setting this
    irq_pin: GPIO16
    voltage:
      id: shelly_voltage
    current_a:
      id: shelly_current_B
    current_b:
      id: shelly_current_A
    active_power_a:
      name: Light Power ${Light_1_Name}
      id: power_usage_light_a
      # active_power_a is normal, so don't multiply by -1
      filters:
        - lambda: >
            if (x < 0.0) return 0.0;
            return x;
      on_value_range:
        - above: 2000.0
          then:
            - output.turn_off: relay_1
            - output.turn_off: relay_2
            - homeassistant.service:
                service: persistent_notification.create
                data:
                  title: Message from Shelly 2.5 with ${Light_1_Name} and ${Light_2_Name} lights
                data_template:
                  message: Switch turned off because max power was exceeded
    active_power_b:
      name: Light Power ${Light_2_Name}
      id: power_usage_light_b
      # active_power_b is inverted, so take the absolute value
      filters:
        - multiply: -1
        - lambda: >
            if (x < 0.0) return 0.0;
            return x;
      on_value_range:
        - above: 2000.0
          then:
            - output.turn_off: relay_1
            - output.turn_off: relay_2
            - homeassistant.service:
                service: persistent_notification.create
                data:
                  title: Message from Shelly 2.5 with ${Light_1_Name} and ${Light_2_Name} lights
                data_template:
                  message: Switch turned off because power exceeded max power

  - platform: total_daily_energy
    name: Light Daily Energy ${Light_1_Name}
    power_id: power_usage_light_a
    unit_of_measurement: Wh
    state_class: total_increasing
    device_class: energy
    #method: trapezoid

  - platform: total_daily_energy
    name: Light Daily Energy ${Light_2_Name}
    power_id: power_usage_light_b
    unit_of_measurement: Wh
    restore: false
    state_class: total_increasing
    device_class: energy
