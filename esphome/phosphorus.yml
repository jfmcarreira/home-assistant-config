substitutions:
  DeviceName: phosphorus
  FriendlyName: Phosphorus
  PowerSaveMode: NONE

esphome:
  name: phosphorus
  #platform: ESP32
  #board: nodemcu-32s

esp32:
  board: nodemcu-32s
  framework:
    type: arduino
    version: recommended

packages:
  esphome_base: !include packages/common.yml


esp32_ble_tracker:
  scan_parameters:
    interval: 1100ms
    window: 1100ms
    active: true

bluetooth_proxy:

# dallas:
#   - pin: GPIO26
#     #number: GPIO26
#     #mode:
#     #    input: true
#     #    pullup: true
#     update_interval: 5s

sensor:
  # - platform: dallas
  #   address: 0x5603199779a49028
  #   name: "Temperature Water Heater Top"
  #   state_class: measurement
  #   device_class: temperature
  #   filters:
  #     - filter_out: nan

  - platform: adc
    pin: GPIO36
    id: adc_bottom_0
    update_interval: 1s
    attenuation: auto
    unit_of_measurement: "V"

  - platform: adc
    pin: GPIO39
    id: adc_bottom_1
    update_interval: 1s
    attenuation: auto
    unit_of_measurement: "V"

  - platform: adc
    pin: GPIO34
    id: adc_solar_panel_0
    update_interval: 1s
    attenuation: auto
    unit_of_measurement: "V"

  - platform: adc
    pin: GPIO35
    id: adc_solar_panel_1
    update_interval: 1s
    attenuation: auto
    unit_of_measurement: "V"

  - platform: template
    id: voltage_bottom
    lambda: return id(adc_bottom_0).state;
    update_interval: 1s
    unit_of_measurement: "V"
    filters:
      - median:
          window_size: 5
          send_every: 5
      - sliding_window_moving_average:
          window_size: 5
          send_every: 5
      - heartbeat: 10s

  - platform: template
    id: voltage_panel
    lambda: return id(adc_solar_panel_1).state;
    update_interval: 1s
    unit_of_measurement: "V"
    filters:
      - median:
          window_size: 5
          send_every: 5
      - sliding_window_moving_average:
          window_size: 5
          send_every: 5
      - heartbeat: 10s


  - platform: template
    name: "Temperature Water Heater Bottom"
    lambda: return 377.0 * id(voltage_bottom).state - 422.0;
    update_interval: 10s
    unit_of_measurement: "°C"
    state_class: measurement
    device_class: temperature

  - platform: template
    name: "Temperature Solar Panel"
    lambda: return 377.0 * id(voltage_panel).state - 422.0;
    update_interval: 10s
    unit_of_measurement: "°C"
    state_class: measurement
    device_class: temperature

text_sensor:
  - platform: ble_scanner
    id: ble_laundry
    name: BLE Scanner Laundry