substitutions:
  DeviceName: shelly25_lights_laundry
  FriendlyName: Shelly25 Laundry
  InputPin: GPIO13
  Light_1_Name: Laundry Main
  Light_2_Name: Laundry Extra

packages:
  esphome_base: !include packages/common.yml
  home_state: !include packages/home_state.yml
  base: !include packages/shelly25_two_lights_one_switch.yml

script:
  - id: smart_light_state
    then:
      - globals.set:
          id: lights_state
          value: !lambda "return id(lights_state)+=1;"
      - if:
          condition:
            lambda: "return id(lights_state) > 1;"
          then:
            - globals.set:
                id: lights_state
                value: "0"

      - if:
          condition:
            lambda: "return id(lights_state) == 0;"
          then:
            - light.turn_on: light_1
            - light.turn_on: light_2
      - if:
          condition:
            lambda: "return id(lights_state) == 1;"
          then:
            - light.turn_on: light_1
            - light.turn_off: light_2

binary_sensor:
  - id: sw_1
    platform: gpio
    pin: ${InputPin}
    on_multi_click:
      - timing:
          - ON for at most 1000ms
          - OFF for at least 100ms
        invalid_cooldown: 100ms
        then:
          - if:
              condition:
                or:
                  - light.is_on: light_1
                  - light.is_on: light_2
              then:
                - logger.log: "Turning lights OFF"
                - light.turn_off: light_1
                - light.turn_off: light_2
                - globals.set:
                    id: lights_state
                    value: "0"
              else:
                - if:
                    condition:
                      and:
                        - api.connected:
                        - binary_sensor.is_on: house_mode_night
                    then:
                      - logger.log: "Turning lights in Night mode"
                      - light.turn_on: light_1
                      - globals.set:
                          id: lights_state
                          value: "1"
                    else:
                      - logger.log: "Turning both lights ON"
                      - light.turn_on: light_1
                      - light.turn_on: light_2
                      - globals.set:
                          id: lights_state
                          value: "0"
      - timing:
          - ON for at least 1000ms
        invalid_cooldown: 100ms
        then:
          - if:
              condition:
                - api.connected:
              then:
                - script.execute: smart_light_state
