################################################################
## Cat Litter
################################################################
homeassistant:
  customize:
    sensor.cat_litter_box_last_clean:
      friendly_name: "Última Limpeza da Areia das"
      icon: mdi:clock-outline
      device_class: timestamp
    sensor.cat_litter_box_last_change:
      friendly_name: "Última Subtituição da Areia das Gatas"
      icon: mdi:clock-outline
      device_class: timestamp

sensor:
  - platform: sql
    db_url: !secret db_custom_url
    queries:
      - name: cat_litter_box_last_clean
        query: >-
          SELECT * FROM tasks
          WHERE task_name LIKE 'Cat_Litter_Clean'
          ORDER BY date  DESC LIMIT 1;
        column: date

      - name: cat_litter_box_last_change
        query: >-
          SELECT * FROM tasks
          WHERE task_name LIKE 'Cat_Litter_Change'
          ORDER BY date  DESC LIMIT 1;
        column: date

binary_sensor cleaning:
  - platform: template
    sensors:
      cat_litter_box_need_clean:
        friendly_name: Limpeza da Areia das Gatas
        device_class: problem
        value_template: >
          {{ ( ( as_timestamp( now().timestamp() | timestamp_custom("%Y-%m-%d %H", true) ) - as_timestamp( as_timestamp( states('sensor.cat_litter_box_last_clean') ) | timestamp_custom("%Y-%m-%d %H", true) ) ) / 60.0 / 60.0 ) > 20 }}
        attribute_templates:
          last_done: >
            {{ as_timestamp( states('sensor.cat_litter_box_last_clean') ) | timestamp_custom("%Y-%m-%d %H:%M:%S", true) }}

      cat_litter_box_need_change:
        friendly_name: Mudança da Areia das Gatas
        device_class: problem
        value_template: >
          {{ ( ( as_timestamp( now().timestamp() | timestamp_custom("%Y-%m-%d", true) ) - as_timestamp( as_timestamp( states('sensor.cat_litter_box_last_change') ) | timestamp_custom("%Y-%m-%d %H:%M", true) ) ) / 24.0 / 60.0 / 60.0 ) > 8 }}
        attribute_templates:
          last_done: >
            {{ as_timestamp( states('sensor.cat_litter_box_last_change') ) | timestamp_custom("%Y-%m-%d %H:%M:%S", true) }}

script:
  cat_clean_notification:
    alias: Task Litter Box Clean Notification
    sequence:
      - service: python_script.light_store
        data:
          store_name: cat_litter_flash_store
          operation: save
          entity_id:
            - light.living_room_tv_leds
      - service: light.turn_on
        data:
          entity_id: light.living_room_tv_leds
          rgb_color:
            - 255
            - 0
            - 0
          brightness: 50
          white_value: 0
      - delay:
          milliseconds: 200
      - service: light.turn_off
        data:
          entity_id: light.living_room_tv_leds
      - delay:
          milliseconds: 200
      - service: light.turn_on
        data:
          entity_id: light.living_room_tv_leds
      - delay:
          milliseconds: 200
      - service: light.turn_off
        data:
          entity_id: light.living_room_tv_leds
      - delay:
          seconds: 1
      - service: python_script.light_store
        data:
          operation: restore
          store_name: cat_litter_flash_store

  cat_litter_clean_no_vaccum:
    alias: Task Litter Box Mark Clean
    sequence:
      - service: shell_command.external_my_sql_insert
        data:
          table: tasks
          value: "Cat_Litter_Clean"
          column: task_name
          date_stamp: >
            "{{ now().timestamp() | timestamp_custom("%Y-%m-%d %H:%M:%S") }}"
          save_string: "true"
          save_date_time: "true"

  cat_litter_clean:
    alias: Task Litter Box Mark Clean and Vaccum
    sequence:
      - service: script.cat_litter_clean_no_vaccum
      # - service: vacuum.set_fan_speed
      #   data:
      #     entity_id: vacuum.roborock
      #     fan_speed: "101"
      # - service: vacuum.send_command
      #   data:
      #     entity_id: vacuum.roborock
      #     command: zoned_cleanup
      #     params:
      #       zone_ids:
      #         - id: CatLitterClean-1-Box
      #           repeats: 2
      #         - id: CatLitterClean-2-Bath
      #           repeats: 1
      # - delay: 00:00:40
      # - service: vacuum.set_fan_speed
      #   data:
      #     entity_id: vacuum.roborock
      #     fan_speed: "max"
      # - wait_template: "{{ is_state('vacuum.roborock', 'docked') }}"
      # - service: vacuum.set_fan_speed
      #   data:
      #     entity_id: vacuum.roborock
      #     fan_speed: "medium"

  cat_litter_change_no_vaccum:
    alias: Task Litter Box Mark Change No Vacuum
    sequence:
      - service: script.cat_litter_clean_no_vaccum
      - delay: # Delay in order to add two entires in the db
          seconds: 1
      - service: shell_command.external_my_sql_insert
        data:
          table: tasks
          value: "Cat_Litter_Change"
          column: task_name
          date_stamp: >
            "{{ now().timestamp() | timestamp_custom("%Y-%m-%d %H:%M:%S") }}"
          save_string: "true"
          save_date_time: "true"

  cat_litter_change:
    alias: Task Litter Box Mark Change
    sequence:
      - service: script.cat_litter_clean
      - delay: # Delay in order to add two entries in the db
          seconds: 1
      - service: shell_command.external_my_sql_insert
        data:
          table: tasks
          value: "Cat_Litter_Change"
          column: task_name
          date_stamp: >
            "{{ now().timestamp() | timestamp_custom("%Y-%m-%d %H:%M:%S") }}"
          save_string: "true"
          save_date_time: "true"

automation:
  - alias: task_cat_litter_clean_reminder
    id: task_cat_litter_clean_reminder
    trigger:
      - platform: event
        event_type: event_remaind_task_todo
    condition:
      - condition: state
        entity_id: binary_sensor.notification_non_disturb
        state: "off"
      - condition: state
        entity_id: binary_sensor.cat_litter_box_need_clean
        state: "on"
      - condition: template
        value_template: >
          {{ now().timestamp() - this.attributes.last_triggered | as_timestamp > 60 * 50 }}
    action:
      - service: persistent_notification.create
        data:
          title: Tarefa Doméstica
          message: Limpar Areia das Gatas
          notification_id: persistent_task_cat_litter_clean
      - choose:
          - conditions:
              - condition: state
                entity_id: person.joao
                state: home
            sequence:
              - service: notify.mobile_app_magnesium
                data:
                  title: Tarefa Doméstica
                  message: Limpar Areia das Gatas
                  data:
                    tag: 50
                    priority: high
                    persistent: true
                    channel: Tasks
                    sticky: true
                    clickAction: "/lovelace/task"
                    actions:
                      - action: task_cat_litter_clean
                        title: "Activar Limpeza"
                      - action: task_cat_litter_clean_no_vaccum
                        title: "Registar Limpeza"

  - alias: task_cat_litter_clean_done
    id: task_cat_litter_clean_done
    trigger:
      - platform: event
        event_type: mobile_app_notification_action
        event_data:
          action: task_cat_litter_clean
    condition:
      - condition: state
        entity_id: binary_sensor.cat_litter_box_need_clean
        state: "on"
    action:
      - service: persistent_notification.dismiss
        data:
          notification_id: persistent_dish_wash_remove_dishes

      - service: notify.mobile_app_all
        data:
          message: clear_notification
          data:
            tag: 50
            dismiss: true

      - condition: state
        entity_id: binary_sensor.cat_litter_box_need_clean
        state: "on"

      - service: script.cat_litter_clean

  - alias: task_cat_litter_clean_done_no_vaccum
    id: task_cat_litter_clean_done_no_vaccum
    trigger:
      - platform: event
        event_type: mobile_app_notification_action
        event_data:
          action: task_cat_litter_clean_no_vaccum
    condition:
      - condition: state
        entity_id: binary_sensor.cat_litter_box_need_clean
        state: "on"
    action:
      - service: persistent_notification.dismiss
        data:
          notification_id: persistent_dish_wash_remove_dishes

      - service: notify.mobile_app_all
        data:
          message: clear_notification
          data:
            tag: 50
            dismiss: true

      - condition: state
        entity_id: binary_sensor.cat_litter_box_need_clean
        state: "on"

      - service: script.cat_litter_change_no_vaccum
