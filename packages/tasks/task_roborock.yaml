################################################################
## Task roborock
################################################################
homeassistant:
  customize:
    sensor.roborock_cleaning_last_done:
      friendly_name: Última Manutenção do Roborock
      device_class: timestamp
    sensor.roborock_empty_bin_last_done:
      friendly_name: Última Limpeza do Depósito
      device_class: timestamp

sensor:
  - platform: sql
    db_url: !secret db_custom_url
    queries:
      - name: roborock_cleaning_last_done
        query: >-
          SELECT * FROM tasks
          WHERE task_name LIKE 'Roborock_Cleaning'
          ORDER BY date  DESC LIMIT 1;
        column: date

  - platform: sql
    db_url: !secret db_custom_url
    queries:
      - name: roborock_empty_bin_last_done
        query: >-
          SELECT * FROM tasks
          WHERE task_name LIKE 'Roborock_EmptyBin'
          ORDER BY date  DESC LIMIT 1;
        column: date

automation:
  - alias: task_roborock_send_cleaning
    id: task_roborock_send_cleaning
    variables:
      tts_message: "O aspirador terminou. Deve proceder à sua limpeza"
      tts_message_timming: "00:00:7"
    trigger:
      - platform: state
        entity_id: vacuum.roborock
        to: "returning"
    condition:
      - condition: template
        value_template: "{{ ( ( now().timestamp() - as_timestamp( states('sensor.roborock_empty_bin_last_done') ) ) / 60 / 60 / 24 ) > 5 }}"
    action:
      - service: script.broadcast_tts_announcement
        data:
          message_duration: "{{ tts_message_timming }}"
          message_to_play: "{{ tts_message }}"
      - service: vacuum.stop
        target:
          entity_id: vacuum.roborock
      - delay:
          seconds: 10
      - service: script.task_roborock_clean

script:
  task_roborock_maintenance:
    alias: Tarefa Roborock Manutenção
    sequence:
      - service: shell_command.external_my_sql_insert
        data:
          table: tasks
          value: "Roborock_Cleaning"
          column: task_name
          date_stamp: >
            "{{ now().timestamp() | timestamp_custom("%Y-%m-%d %H:%M:%S") }}"
          save_string: "true"
          save_date_time: "true"

      - service: shell_command.external_my_sql_insert
        data:
          table: tasks
          value: "Roborock_EmptyBin"
          column: task_name
          date_stamp: >
            "{{ now().timestamp() | timestamp_custom("%Y-%m-%d %H:%M:%S") }}"
          save_string: "true"
          save_date_time: "true"

  task_roborock_clean:
    alias: Tarefa Roborock Limpeza
    sequence:
      - service: shell_command.external_my_sql_insert
        data:
          table: tasks
          value: "Roborock_EmptyBin"
          column: task_name
          date_stamp: >
            "{{ now().timestamp() | timestamp_custom("%Y-%m-%d %H:%M:%S") }}"
          save_string: "true"
          save_date_time: "true"

      ## For original firmware and xiaomi app
      ## Trial and error for the position
      #- service: vacuum.set_fan_speed
      #data:
      #entity_id: vacuum.roborock
      #fan_speed: "105"
      #- service: vacuum.send_command
      #data:
      #command: app_goto_target
      #params:
      #- 26925
      #- 24435
      #entity_id: vacuum.roborock

      ## For valetudo app
      ## Position is configured within the webapp
      - service: vacuum.stop
        target:
          entity_id: vacuum.roborock

      - service: vacuum.send_command
        entity_id: vacuum.roborock
        data:
          command: "go_to"
          params:
            "spot_id": "KitchenBin"
