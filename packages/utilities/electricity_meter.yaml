################################################################
## Monthly Energy Meter
################################################################
homeassistant:
  customize:
    sensor.bhpzem_energy:
      last_reset: "1970-01-01T00:00:00+00:00"
      device_class: energy
      state_class: total_increasing
    sensor.pzem_electricity_meter:
      last_reset: "1970-01-01T00:00:00+00:00"
      device_class: energy
      state_class: total_increasing
    sensor.monthly_energy:
      device_class: energy
      state_class: total_increasing
      friendly_name: Consumo de Electricidade Mensal

utility_meter:
  monthly_energy:
    source: sensor.bhpzem_energy
    cycle: monthly

  # monthly_energy_bi_tariff:
  #   source: sensor.bhpzem_energy
  #   cycle: monthly
  #   offset:
  #     days: 19
  #   tariffs:
  #     - Vazio
  #     - Fora de Vazio

  # monthly_energy_tri_tariff:
  #   source: sensor.bhpzem_energy
  #   cycle: monthly
  #   offset:
  #     days: 19
  #   tariffs:
  #     - Vazio
  #     - Ponta
  #     - Cheias

sensor meter:
  - platform: template
    sensors:
      pzem_electricity_meter:
        friendly_name: Consumo Total de Electricidade
        unit_of_measurement: kWh
        value_template: >
          {{ ( states('sensor.bhpzem_energy') | float + 3586 ) }}
      pzem_electricity_meter_frontend:
        friendly_name: Consumo de Electricidade
        unit_of_measurement: kWh
        value_template: >
          {{ states('sensor.pzem_electricity_meter') | int }}

sensor bill:
  - platform: template
    sensors:
      monthly_energy_fronted:
        unit_of_measurement: "kWh"
        value_template: >-
          {{ float(states.sensor.monthly_energy.state) | int }}
      monthly_energy_cicle_days:
        unit_of_measurement: "days"
        value_template: >-
          {{ ( as_timestamp( now() ) - as_timestamp( states.sensor.monthly_energy.attributes.last_reset ) ) | timestamp_custom("%d") }}
      monthly_energy_cost:
        friendly_name: "Fatura Energia"
        icon_template: "mdi:currency-eur"
        unit_of_measurement: "€"
        value_template: >-
          {% set price_per_kwh = 0.1389 %}

          {% set days = (states.sensor.monthly_energy_cicle_days.state|float) %}
          {% set kwh  = (states.sensor.monthly_energy.state|float) %}

          {% set price_energy = ( 100.0 * days / 30.0 ) * price_per_kwh * 1.13 + ( kwh - 100.0 * days / 30.0 ) * price_per_kwh * 1.23 %}
          {% set price_days = ( ( 0.2474 - 0.1585 ) * 1.23 + 0.1585 * 1.06 ) * days %}

          {{ ( price_energy + price_days + 0.07 * 1.23 + 2.85 * 1.06 ) | round(2) }}
        attribute_templates:
          Factura Anterior: >-
            {% set price_per_kwh = 0.1389 %}

            {% set days = 365 / 12 %}
            {% set kwh  = (states.sensor.monthly_energy.attributes.last_period|float) %}

            {% set price_energy = ( 100.0 * days / 30.0 ) * price_per_kwh * 1.13 + ( kwh - 100.0 * days / 30.0 ) * price_per_kwh * 1.23 %}
            {% set price_days = ( ( 0.2474 - 0.1585 ) * 1.23 + 0.1585 * 1.06 ) * days %}

            {{ ( price_energy + price_days + 0.07 * 1.23 + 2.85 * 1.06 ) | round(2) }}

          #Estimativa em Simples: >-
          #{{ ( ( float(states.sensor.monthly_energy.state) * 0.1456 + float(states.sensor.monthly_energy_cicle_days.state) * 0.2292 ) * 1.23 ) | round(2) }} €
          #Estimativa em Bi-horario: >-
          #{{ ( ( float(states.sensor.monthly_energy_bi_tariff_fora_de_vazio.state) * 0.1875 + float(states.sensor.monthly_energy_bi_tariff_vazio.state) * 0.1008 + float(states.sensor.monthly_energy_cicle_days.state) * 0.2409 ) * 1.23 ) | round(2) }} €
          #Estimativa em Tri-horario: >-
          #{{ ( ( float(states.sensor.monthly_energy_tri_tariff_cheias.state) * 0.1565 + float(states.sensor.monthly_energy_tri_tariff_ponta.state) * 0.2720 + float(states.sensor.monthly_energy_tri_tariff_vazio.state) * 0.0967 + float(states.sensor.monthly_energy_cicle_days.state) * 0.2343 ) * 1.23 ) | round(2) }} €

          #Estimativa Factura Anterior em Simples: >-
          #{{ ( ( float(states.sensor.monthly_energy.attributes.last_period) * 0.1456 + 30.0 * 0.2292 ) * 1.23 ) | round(2) }} €
          #Estimativa Factura Anterior em Bi-horario: >-
          #{{ ( ( float(states.sensor.monthly_energy_bi_tariff_fora_de_vazio.attributes.last_period) * 0.1875 + float(states.sensor.monthly_energy_bi_tariff_vazio.attributes.last_period) * 0.1008 + 30 * 0.2409 ) * 1.23 ) | round(2) }} €
          #Estimativa Factura Anterior em Tri-horario: >-
          #{{ ( ( float(states.sensor.monthly_energy_tri_tariff_cheias.attributes.last_period) * 0.1565 + float(states.sensor.monthly_energy_tri_tariff_ponta.attributes.last_period) * 0.2720 + float(states.sensor.monthly_energy_tri_tariff_vazio.attributes.last_period) * 0.0967 + 30 * 0.2343 ) * 1.23 ) | round(2) }} €

automation insert:
  - alias: "Monthly Stats Electricity Consumption to Database"
    initial_state: true
    mode: queued
    max: 10
    trigger:
      - platform: state
        entity_id: sensor.monthly_energy
        attribute: last_period
    action:
      - service: shell_command.external_my_sql_insert
        data_template:
          table: monthly_energy_bill
          value: >
            {{ states.sensor.monthly_energy.attributes.last_period }}
          column: "value"

  - alias: "Daily Stats Insert Value of Electricity to Table Energy of Database"
    initial_state: true
    mode: queued
    max: 10
    trigger:
      - platform: state
        entity_id: sensor.daily_energy
    action:
      - service: shell_command.external_my_sql_insert
        data_template:
          table: daily_energy
          value: >
            {{ states.sensor.daily_energy.state }}
          column: "value"
