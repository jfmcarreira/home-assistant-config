routine_bedtime_all_off:
  alias: Routina de Boa Noite (Desligar Tudo)
  sequence:
  - service: script.turn_on
    data: {}
    target:
      entity_id: script.house_turn_all_off
  - delay:
      hours: 0
      minutes: 0
      seconds: 1
      milliseconds: 0
  - service: light.turn_on
    data: {}
    target:
      entity_id: light.stairs_wall
  - delay:
      hours: 0
      minutes: 0
      seconds: 35
      milliseconds: 0
  - service: light.turn_off
    data:
      entity_id: all
  - service: input_select.select_option
    data:
      option: Sleep
    target:
      entity_id: input_select.house_mode
  - type: turn_off
    device_id: d2123f9e22e377423487a7554edd985a
    entity_id: light.fire_tablet_screen
    domain: light
  mode: single
  icon: mdi:sleep
house_turn_all_off:
  alias: House Turn Everything Off
  mode: restart
  sequence:
  - service: light.turn_off
    data: {}
    target:
      area_id:
      - bathroom_main
      - bathroom_rc
      - kitchen
      - office
      - outside
      - hall
      - laundry
      - guest_bedroom
      - bedroom_rc
      - bedroom_ricardo
      - living_room
      - master_bedroom
  - service: fan.turn_off
    target:
      area_id:
      - bathroom_main
      - bathroom_rc
      - master_bedroom
    data: {}
  - service: media_player.turn_off
    data: {}
    target:
      entity_id:
      - media_player.google_home_speakers
      - media_player.living_room_tv
routine_good_moorning:
  alias: Routina de Bom Dia
  sequence:
  - service: cover.set_cover_position
    data:
      entity_id: all
      position: 30
  mode: single
  icon: mdi:weather-sunset-up
routine_exit_house_all_off:
  alias: Routina de Sair de Casa (Desligar Tudo)
  sequence:
  - service: script.turn_on
    data: {}
    target:
      entity_id: script.house_turn_all_off
  - delay:
      hours: 0
      minutes: 0
      seconds: 2
      milliseconds: 0
  - condition: numeric_state
    entity_id: sun.sun
    attribute: elevation
    below: '0'
  - service: light.turn_on
    data: {}
    target:
      entity_id:
      - light.kitchen_led
      - light.kitchen_door
      - light.exterior_wall_side
  - wait_for_trigger:
    - platform: state
      entity_id:
      - binary_sensor.kitchen_door
      to: 'on'
    timeout: 00:05:00
  - wait_for_trigger:
    - platform: state
      entity_id:
      - binary_sensor.kitchen_door
      to: 'off'
    timeout: 00:05:00
  - service: light.turn_off
    data: {}
    target:
      area_id: kitchen
  - delay:
      hours: 0
      minutes: 3
      seconds: 0
      milliseconds: 0
  - service: light.turn_off
    data:
      entity_id: all
  - type: turn_off
    device_id: d2123f9e22e377423487a7554edd985a
    entity_id: light.fire_tablet_screen
    domain: light
  mode: single
  icon: mdi:exit-run
lights_arriving_home:
  alias: 'Lights Arriving Home '
  sequence:
  - condition: state
    entity_id: light.outside_group
    state: 'off'
  - service: light.turn_on
    target:
      entity_id:
      - light.exterior_wall_back
      - light.exterior_wall_side
      - light.kitchen_door
    data: {}
  - wait_for_trigger:
    - platform: state
      entity_id:
      - binary_sensor.kitchen_door
      to: 'on'
    timeout:
      minutes: 30
  - service: light.turn_on
    data: {}
    target:
      entity_id: light.kitchen_led
  - wait_for_trigger:
    - platform: state
      entity_id:
      - binary_sensor.kitchen_door
      to: 'off'
    timeout:
      minutes: 30
  - delay:
      hours: 0
      minutes: 5
      seconds: 0
      milliseconds: 0
  - service: light.turn_off
    target:
      entity_id:
      - light.exterior_wall_side
      - light.exterior_wall_back
      - light.kitchen_door
    data: {}
  mode: single
show_word_party:
  alias: Festa das Palavras na Televisão
  sequence:
  - service: python_script.netflix_play_show
    data:
      show: festa das palavras
  mode: single
cover_close_to_when_raining:
  alias: Fechar Estores Durante a Chuva
  fields:
    action_cover:
      name: Cover
      description: Cover to control
      example: cover.kitchen
      selector:
        entity:
          multiple: false
          domain: cover
  variables:
    cover_entitiy: cover.{{ action_cover }}
    cover_position: input_number.cover_rainy_position_{{ action_cover }}
  sequence:
  - condition: template
    value_template: '{{ state_attr(cover_entitiy, ''current_position'') | float >
      states(cover_position) }}'
  - service: cover.close_cover
    target:
      entity_id: '{{ cover_entitiy }}'
  - wait_template: '{{ is_state(cover_entitiy, ''closed'') }}'
  - service: cover.set_cover_position
    data:
      position: '{{ states(cover_position) }}'
    target:
      entity_id: '{{ cover_entitiy }}'
routine_cover_rain_mode:
  alias: Routina Modo de Chuva
  sequence:
  - service: script.cover_group_action
    data:
      action_to_run: script.cover_close_to_when_raining
      control_switch: close_in_rain
  mode: single
cover_to_partial_close:
  alias: Colocar Estores a Dois Terços
  fields:
    action_cover:
      name: Cover
      description: Cover to control
      example: cover.kitchen
      selector:
        entity:
          multiple: false
          domain: cover
  sequence:
  - service: cover.set_cover_position
    data:
      position: '66%'
    target:
      entity_id: '{{ cover_entitiy }}'
cover_to_partial_open:
  alias: Colocar Estores a Um Terço
  fields:
    action_cover:
      name: Cover
      description: Cover to control
      example: cover.kitchen
      selector:
        entity:
          multiple: false
          domain: cover
  sequence:
  - service: cover.set_cover_position
    data:
      position: '30%'
    target:
      entity_id: '{{ cover_entitiy }}'